generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  expires      DateTime
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String?   @unique
  password      String?
  image         String?
  createdAt     DateTime  @default(now())
  emailVerified DateTime? @map("email_verified")
  isAdmin       Boolean   @default(false)
  sessions      Session[]
  accounts      Account[]
  reserve       ReserveTable[]
  sold       SoldTable[]
}

model Account {
  id                String   @id @default(uuid())
  userId            String   @map("user_id")
  type              String?
  provider          String
  providerAccountId String   @map("provider_account_id")
  token_type        String?
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  scope             String?
  id_token          String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model CAR {
  id           String       @id @default(uuid())
  carName      String
  Img          String[]
  brand        String
  price        Int
  Fuel         String
  Mileage      Int
  model        String
  Plate        String
  type         String
  Transmission String
  Color        String
  Availability Availability
  Seat         Int
  KmsDone      Int
  ownerShip    Int
  Year         Int
  reserve       ReserveTable[]
  sold       SoldTable[]
}

model VerificationRequest {
  id         String   @id @default(uuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

enum Availability {
  Available
  Reserved
  Sold
}


model ReserveTable {
  id String @id @default(uuid())
  userID String 
  user User @relation(fields: [userID], references: [id])
  userName String 
  userEmail String
  carID String 
  car CAR @relation(fields: [carID], references: [id])
  time DateTime @default(now())
}

model SoldTable {
  id String @id @default(uuid())
  userID String 
  user User @relation(fields: [userID], references: [id])
  userName String 
  userEmail String
  carID String 
  car CAR @relation(fields: [carID], references: [id])
  time DateTime @default(now())
}